{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/arihanttr/Git/sustaind/src/components/ForceNetworkGraph.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\ninterface Person {\n    id: string;\n    name: string;\n    designation: string;\n    description: string;\n    picture: string;\n    email: string;\n    isLead: boolean;\n}\n\ninterface Node extends d3.SimulationNodeDatum {\n    id: string;\n    person: Person;\n    isLead: boolean;\n}\n\ninterface Link extends d3.SimulationLinkDatum<Node> {\n    source: string | Node;\n    target: string | Node;\n}\n\ninterface ForceNetworkGraphProps {\n    people: Person[];\n    onPersonClick: (person: Person) => void;\n    width?: number;\n    height?: number;\n}\n\nexport default function ForceNetworkGraph({\n    people,\n    onPersonClick,\n    width = 800,\n    height = 600\n}: ForceNetworkGraphProps) {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        if (!svgRef.current || people.length === 0) return;\n\n        // Clear previous content\n        d3.select(svgRef.current).selectAll('*').remove();\n\n        const svg = d3.select(svgRef.current);\n\n        // Create nodes from people data\n        const nodes: Node[] = people.map(person => ({\n            id: person.id,\n            person,\n            isLead: person.isLead,\n            x: width / 2,\n            y: height / 2\n        }));\n\n        // Create links - connect leader to all other members\n        const leader = nodes.find(node => node.isLead);\n        const links: Link[] = leader ?\n            nodes\n                .filter(node => !node.isLead)\n                .map(node => ({\n                    source: leader.id,\n                    target: node.id\n                }))\n            : [];\n\n        // Create force simulation\n        const simulation = d3.forceSimulation(nodes)\n            .force('link', d3.forceLink<Node, Link>(links).id(d => d.id).distance(200))\n            .force('charge', d3.forceManyBody().strength(-800))\n            .force('center', d3.forceCenter(width / 2, height / 2))\n            .force('collision', d3.forceCollide().radius(60));\n\n        // Create container group\n        const container = svg.append('g');\n\n        // Add zoom behavior (disabled panning, only scaling)\n        const zoom = d3.zoom<SVGSVGElement, unknown>()\n            .scaleExtent([1.15, 2])\n            .filter((event) => {\n                // Disable zoom and pan\n                return event.type === '';\n            })\n            .on('zoom', (event) => {\n                container.attr('transform', event.transform);\n            });\n\n        svg.call(zoom);\n\n        // Create links\n        const linkElements = container\n            .selectAll('.link')\n            .data(links)\n            .enter()\n            .append('line')\n            .attr('class', 'link')\n            .attr('stroke', '#d1d5db')\n            .attr('stroke-width', 2)\n            .attr('stroke-opacity', 0.6);\n\n        // Create node groups\n        const nodeGroups = container\n            .selectAll('.node')\n            .data(nodes)\n            .enter()\n            .append('g')\n            .attr('class', 'node')\n            .style('cursor', 'pointer')\n            .call(d3.drag<SVGGElement, Node>()\n                .on('start', (event, d) => {\n                    if (!event.active) simulation.alphaTarget(0.3).restart();\n                    d.fx = d.x;\n                    d.fy = d.y;\n                })\n                .on('drag', (event, d) => {\n                    d.fx = event.x;\n                    d.fy = event.y;\n                })\n                .on('end', (event, d) => {\n                    if (!event.active) simulation.alphaTarget(0);\n                    d.fx = null;\n                    d.fy = null;\n                })\n            );\n\n        // Add circles for profile pictures (background)\n        nodeGroups\n            .append('circle')\n            .attr('r', d => d.isLead ? 50 : 35)\n            .attr('fill', 'white')\n            .attr('stroke', d => d.isLead ? '#16a34a' : '#d1d5db')\n            .attr('stroke-width', d => d.isLead ? 4 : 2);\n\n        // Add profile pictures using foreignObject\n        nodeGroups\n            .append('foreignObject')\n            .attr('x', d => d.isLead ? -45 : -30)\n            .attr('y', d => d.isLead ? -45 : -30)\n            .attr('width', d => d.isLead ? 90 : 60)\n            .attr('height', d => d.isLead ? 90 : 60)\n            .append('xhtml:div')\n            .style('width', '100%')\n            .style('height', '100%')\n            .style('border-radius', '50%')\n            .style('overflow', 'hidden')\n            .style('background-size', 'cover')\n            .style('background-position', 'center')\n            .style('background-image', d => `url(${d.person.picture})`);\n\n        // Add name labels\n        nodeGroups\n            .append('text')\n            .attr('dy', d => d.isLead ? 65 : 50)\n            .attr('text-anchor', 'middle')\n            .style('font-size', d => d.isLead ? '14px' : '12px')\n            .style('font-weight', d => d.isLead ? 'bold' : 'normal')\n            .style('fill', '#111827')\n            .text(d => d.person.name);\n\n        // Add click handlers\n        nodeGroups.on('click', (event, d) => {\n            onPersonClick(d.person);\n        });\n\n        // Update positions on simulation tick\n        simulation.on('tick', () => {\n            linkElements\n                .attr('x1', d => (d.source as Node).x!)\n                .attr('y1', d => (d.source as Node).y!)\n                .attr('x2', d => (d.target as Node).x!)\n                .attr('y2', d => (d.target as Node).y!);\n\n            nodeGroups\n                .attr('transform', d => `translate(${d.x},${d.y})`);\n        });\n\n        // Cleanup function\n        return () => {\n            simulation.stop();\n        };\n    }, [people, onPersonClick, width, height]);\n\n    return (\n        <div className=\"w-full h-full flex justify-center items-center\">\n            <svg\n                ref={svgRef}\n                width={width}\n                height={height}\n                className=\"border border-gray-200 rounded-lg shadow-sm\"\n                style={{ background: 'linear-gradient(to bottom, #f9fafb, #ffffff)' }}\n            />\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/arihanttr/Git/sustaind/src/app/people/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport ForceNetworkGraph from '../../components/ForceNetworkGraph';\n\ninterface Person {\n    id: string;\n    name: string;\n    designation: string;\n    description: string;\n    picture: string;\n    email: string;\n    isLead: boolean;\n}\n\nexport default function People() {\n    const [people, setPeople] = useState<Person[]>([]);\n    const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n\n    useEffect(() => {\n        const fetchPeople = async () => {\n            try {\n                const response = await fetch('./data/people.json');\n                const data = await response.json();\n                setPeople(data);\n            } catch (error) {\n                console.error('Error fetching people:', error);\n            }\n        };\n\n        fetchPeople();\n    }, []);\n\n    return (\n        <div className=\"min-h-screen py-20 px-4 sm:px-6 lg:px-8 bg-white\">\n            <div className=\"max-w-6xl mx-auto\">\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6 }}\n                    className=\"text-center mb-16\"\n                >\n                    <h1 className=\"text-4xl md:text-5xl font-bold text-green-600 mb-4\">\n                        Our People\n                    </h1>\n                    <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n                        Meet the passionate researchers and developers working to make AI sustainable for India.\n                    </p>\n                </motion.div>\n\n                {/* D3 Force Network Graph (Visible on medium screens and up) */}\n                <div className=\"hidden md:block\">\n                    <ForceNetworkGraph\n                        people={people}\n                        onPersonClick={setSelectedPerson}\n                        width={800}\n                        height={600}\n                    />\n                </div>\n\n                {/* Mobile-friendly grid view (Visible on small screens) */}\n                <div className=\"grid grid-cols-1 gap-8 md:hidden\">\n                    {people.map((person) => (\n                        <motion.div\n                            key={person.id}\n                            className=\"text-center cursor-pointer\"\n                            whileHover={{ scale: 1.05 }}\n                            onClick={() => setSelectedPerson(person)}\n                        >\n                            <div className={`w-24 h-24 mx-auto rounded-full overflow-hidden shadow-lg border-4 ${person.isLead ? 'border-green-600' : 'border-gray-200'} mb-3`}>\n                                <img\n                                    src={person.picture}\n                                    alt={person.name}\n                                    className=\"w-full h-full object-cover\"\n                                />\n                            </div>\n                            <p className=\"font-medium text-gray-900\">{person.name}</p>\n                            <p className=\"text-sm text-orange-600\">{person.designation}</p>\n                        </motion.div>\n                    ))}\n                </div>\n\n                {/* Person Detail Modal */}\n                <AnimatePresence>\n                    {selectedPerson && (\n                        <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-2 sm:p-4 z-50\"\n                            onClick={() => setSelectedPerson(null)}\n                        >\n                            <motion.div\n                                initial={{ scale: 0.8, opacity: 0 }}\n                                animate={{ scale: 1, opacity: 1 }}\n                                exit={{ scale: 0.8, opacity: 0 }}\n                                transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                                className=\"bg-white rounded-lg sm:rounded-lg max-w-2xl w-full max-h-[95vh] sm:max-h-[80vh] overflow-y-auto shadow-2xl\"\n                                onClick={(e) => e.stopPropagation()}\n                            >\n                                <div className=\"p-4 sm:p-8\">\n                                    <div className=\"flex flex-col sm:flex-row justify-between items-start mb-4 sm:mb-6\">\n                                        <div className=\"flex flex-col sm:flex-row items-center sm:items-start space-y-4 sm:space-y-0 sm:space-x-6 w-full\">\n                                            <div className=\"w-20 h-20 sm:w-24 sm:h-24 rounded-full overflow-hidden shadow-lg border-4 flex-shrink-0\">\n                                                <img\n                                                    src={selectedPerson.picture}\n                                                    alt={selectedPerson.name}\n                                                    className=\"w-full h-full object-cover\"\n                                                />\n                                            </div>\n                                            <div className=\"flex-1 text-center sm:text-left\">\n                                                <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-1\">\n                                                    {selectedPerson.name}\n                                                </h2>\n                                                <p className=\"text-orange-600 font-semibold text-base sm:text-lg mb-2\">\n                                                    {selectedPerson.designation}\n                                                </p>\n                                                <a\n                                                    href={`mailto:${selectedPerson.email}`}\n                                                    className=\"text-green-600 hover:text-green-700 transition-colors text-sm sm:text-base break-all\"\n                                                >\n                                                    {selectedPerson.email}\n                                                </a>\n                                            </div>\n                                        </div>\n                                        <button\n                                            onClick={() => setSelectedPerson(null)}\n                                            className=\"text-gray-400 hover:text-gray-600 text-2xl sm:text-3xl font-bold mt-2 sm:mt-0 self-end sm:self-start\"\n                                        >\n                                            &times;\n                                        </button>\n                                    </div>\n                                    <div className=\"text-gray-700 leading-relaxed prose text-sm sm:text-base\">\n                                        <p>{selectedPerson.description}</p>\n                                    </div>\n                                </div>\n                            </motion.div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}}]
}